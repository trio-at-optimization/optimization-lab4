{
    "f_label": "def f(x, w):  \n    signal = np.zeros_like(x)\n    signal += 1    * np.cos(2 * np.pi * 0 * x)\n    signal += w[0] * np.cos(2 * np.pi * 1 * x) + w[1] * np.sin(2 * np.pi * 1 * x)\n    signal += 0.5  * np.cos(2 * np.pi * 2 * x) + 0.1  * np.sin(2 * np.pi * 2 * x)\n\n# def f(x, w):\n#     N = len(w) // 2\n    \n#     signal = np.zeros_like(x)\n#     signal += w[0] * np.cos(2 * np.pi * 0 * x)\n#     signal += w[1] * np.cos(2 * np.pi * 1 * x) + w[1 + N] * np.sin(2 * np.pi * 1 * x)\n#     signal += w[2] * np.cos(2 * np.pi * 2 * x) + w[2 + N] * np.sin(2 * np.pi * 2 * x)\n\n# def f(x, w):\n    # N = len(w) // 2\n    # signal = np.zeros_like(x)\n    \n    # for k in range(N):\n    #     if k == 0:\n    #         signal += w[k] * np.cos(2 * np.pi * k * x)\n    #     else:\n    #         signal += w[k] * np.cos(2 * np.pi * k * x) + w[k + N] * np.sin(2 * np.pi * k * x)\n    \n    return signal\n",
    "density": 8000,
    "dots_count": 2000,
    "radius": 0.03,
    "dist": 1,
    "w0": 0.5,
    "w1": 0.3,
    "test_count": 15
}